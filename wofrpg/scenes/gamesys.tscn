[gd_scene load_steps=27 format=2]

[ext_resource path="res://scripts/global/sceneroot.gd" type="Script" id=1]
[ext_resource path="res://images/character/sanw/idle/saw-body.png" type="Texture" id=2]
[ext_resource path="res://images/character/sanw/idle/saw-tdec.png" type="Texture" id=3]
[ext_resource path="res://images/character/sanw/idle/saw-spine.png" type="Texture" id=4]
[ext_resource path="res://images/character/sanw/idle/saw-legs.png" type="Texture" id=5]
[ext_resource path="res://images/character/sanw/idle/saw-wings.png" type="Texture" id=6]
[ext_resource path="res://images/character/sanw/idle/saw-tail.png" type="Texture" id=7]
[ext_resource path="res://images/character/sanw/idle/saw-head.png" type="Texture" id=8]
[ext_resource path="res://images/ui/backgrounds/sw-customizationscreen.png" type="Texture" id=9]
[ext_resource path="res://fonts/pixel-s.tres" type="DynamicFont" id=10]
[ext_resource path="res://images/ui/buttons/arrow-left-hover.png" type="Texture" id=11]
[ext_resource path="res://images/ui/buttons/arrow-right-hover.png" type="Texture" id=12]
[ext_resource path="res://images/ui/buttons/arrow-right.png" type="Texture" id=13]
[ext_resource path="res://images/ui/buttons/arrow-up-hover.png" type="Texture" id=14]
[ext_resource path="res://images/ui/buttons/arrow-up.png" type="Texture" id=15]
[ext_resource path="res://images/ui/buttons/arrow-left.png" type="Texture" id=16]
[ext_resource path="res://images/ui/buttons/arrow-down-hover.png" type="Texture" id=17]
[ext_resource path="res://images/ui/buttons/arrow-down.png" type="Texture" id=18]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

var sslot = preload(\"res://objects/ui/saveslot.tscn\")

func _ready():
	get_parent().get_node(\"Camera2D\").zoom = Vector2(1,1)
	get_parent().get_node(\"Camera2D\").position = Vector2(683,384)
	var index = 0
	for character in gloader.characters:
		var slot = sslot.instance()
		slot.initialize(character.cname, index, character.clevel)
		slot.connect(\"clicked\", self, \"onSlotPress\")
		$ScrollContainer/chartabs.add_child(slot)
	var addSlot = sslot.instance()
	addSlot.initializeAdd()
	addSlot.connect(\"add\", self, \"onAdd\")
	$ScrollContainer/chartabs.add_child(addSlot)
	
	$design/spine.texture = null
	$design/body.texture = null
	$design/legs.texture = null
	$design/tail.texture = null
	$design/head.texture = null
	$design/wings.texture = null
	$design/tdec.texture = null

func onSlotPress(index): #Callback from slot signal
	for x in range($ScrollContainer/chartabs.get_child_count() - 1):
		if x == index:
			continue
		$ScrollContainer/chartabs.get_child(x).unselect()
	var cdata = gloader.characters[index]
	if cdata.cuseCustom:
		var image = gloader.loadCImage(cdata.ccustomPath)
		var sss = Vector2(cdata.ccustomSize[0], cdata.ccustomSize[1])
		var frameSize = Vector2(image.get_data().get_width()/sss.x, image.get_data().get_height()/sss.y)
		$design/body.texture = image
		$design/body.region_rect.size = frameSize
		var idlerow = 0
		for anim in cdata.ccustomAnims:
			if anim.name == \"idle\":
				idlerow = anim.row
		$design/body.region_rect.position = Vector2(0, frameSize.y * (idlerow - 1))
		$design/spine.texture = null
		$design/legs.texture = null
		$design/tail.texture = null
		$design/head.texture = null
		$design/wings.texture = null
		$design/tdec.texture = null
	else:
		pass #TODO
	$design.rect_scale = Vector2(1*cdata.cscale, 1*cdata.cscale)
	$design.rect_position = Vector2($design.rect_position.x + (rect_size.x * cdata.cscale) / 2, $design.rect_position.y + rect_size.y*(cdata.cscale) - (15 if cdata.cscale != 1 else 0))
	print($design.rect_position.y + rect_size.y*(1-cdata.cscale))
	

func onAdd():
	$design.rect_scale = Vector2(1,1)
	$design.rect_position = Vector2(123.519, 235.451)
	$design/spine.texture = load(\"res://images/character/nigw/idle/nw-spine.png\")
	$design/body.texture = load(\"res://images/character/nigw/idle/nw-body.png\")
	$design/legs.texture = load(\"res://images/character/nigw/idle/nw-legs.png\")
	$design/tail.texture = load(\"res://images/character/nigw/idle/nw-tail.png\")
	$design/head.texture = load(\"res://images/character/nigw/idle/nw-head.png\")
	$design/wings.texture = load(\"res://images/character/nigw/idle/nw-wings.png\")
	$design/tdec.texture = null
	get_node(\"../AnimationPlayer\").play(\"camInit\")
	get_node(\"../Camera2D\").camMovePart(\"head\")
	get_node(\"../CanvasLayer/toplayer\").onCreate()
	$design/body.region_rect.position = Vector2.ZERO
	for x in range($ScrollContainer/chartabs.get_child_count() - 1):
		$ScrollContainer/chartabs.get_child(x).unselect()

func customizerCancel():
	get_parent().get_node(\"CanvasLayer/toplayer/mmbtn\").show()
	$design/spine.texture = null
	$design/legs.texture = null
	$design/tail.texture = null
	$design/head.texture = null
	$design/wings.texture = null
	$design/tdec.texture = null
	$design/body.texture = null
	get_parent().get_node(\"Camera2D\").camMovePart(\"overview\")
	get_parent().get_node(\"AnimationPlayer\").play_backwards(\"camInit\")

func mmreturn():
	gvars.load_scene(\"res://scenes/menus.tscn\")
"

[sub_resource type="Animation" id=2]
resource_name = "preview"
length = 1.2
loop = true
step = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("spine:region_rect")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 796, 448 ), Rect2( 796, 0, 796, 448 ), Rect2( 1592, 0, 796, 448 ), Rect2( 2388, 0, 796, 448 ), Rect2( 3184, 0, 796, 448 ), Rect2( 3980, 0, 796, 448 ), Rect2( 0, 0, 796, 448 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("body:region_rect")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 796, 448 ), Rect2( 796, 0, 796, 448 ), Rect2( 1592, 0, 796, 448 ), Rect2( 2388, 0, 796, 448 ), Rect2( 3184, 0, 796, 448 ), Rect2( 3980, 0, 796, 448 ), Rect2( 0, 0, 796, 448 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("legs:region_rect")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 3980, 0, 796, 448 ), Rect2( 796, 0, 796, 448 ), Rect2( 1592, 0, 796, 448 ), Rect2( 2388, 0, 796, 448 ), Rect2( 3184, 0, 796, 448 ), Rect2( 3980, 0, 796, 448 ), Rect2( 0, 0, 796, 448 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("tail:region_rect")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 796, 448 ), Rect2( 796, 0, 796, 448 ), Rect2( 1592, 0, 796, 448 ), Rect2( 2388, 0, 796, 448 ), Rect2( 3184, 0, 796, 448 ), Rect2( 3980, 0, 796, 448 ), Rect2( 0, 0, 796, 448 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("head:region_rect")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 796, 448 ), Rect2( 796, 0, 796, 448 ), Rect2( 1592, 0, 796, 448 ), Rect2( 2388, 0, 796, 448 ), Rect2( 3184, 0, 796, 448 ), Rect2( 3980, 0, 796, 448 ), Rect2( 0, 0, 796, 448 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("wings:region_rect")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 796, 448 ), Rect2( 796, 0, 796, 448 ), Rect2( 1592, 0, 796, 448 ), Rect2( 2388, 0, 796, 448 ), Rect2( 3184, 0, 796, 448 ), Rect2( 3980, 0, 796, 448 ), Rect2( 0, 0, 796, 448 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("tdec:region_rect")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Rect2( 0, 0, 796, 448 ), Rect2( 796, 0, 796, 448 ), Rect2( 1592, 0, 796, 448 ), Rect2( 2388, 0, 796, 448 ), Rect2( 3184, 0, 796, 448 ), Rect2( 3980, 0, 796, 448 ), Rect2( 0, 0, 796, 448 ) ]
}

[sub_resource type="GDScript" id=3]
script/source = "extends Camera2D

const parts = [\"head\",\"body\",\"spine\",\"wings\",\"legs\",\"tail\",\"tdec\", \"overview\"]
const camspeed = 10
const camzoomspeed = 0.02

var cameraGoTo: Vector2
var cameraZoom: Vector2

func _ready():
	cameraGoTo = position
	cameraZoom = Vector2(1,1)

func camMovePart(part:String):
	if part in parts:
		match parts.find(part):
			0: #head
				cameraGoTo = Vector2(713,354)
				cameraZoom = Vector2(0.4,0.4)
			1:
				cameraGoTo = Vector2(625,450)
				cameraZoom = Vector2(0.4,0.4)
			2:
				cameraGoTo = Vector2(513,434)
				cameraZoom = Vector2(0.6,0.6)
			3:
				cameraGoTo = Vector2(600,470)
				cameraZoom = Vector2(0.4,0.4)
			4:
				cameraGoTo = Vector2(593,562)
				cameraZoom = Vector2(0.4,0.4)
			5:
				cameraGoTo = Vector2(352,462)
				cameraZoom = Vector2(0.4,0.4)
			6:
				cameraGoTo = Vector2(210,494)
				cameraZoom = Vector2(0.3,0.3)
			7:
				cameraGoTo = Vector2(1366/2,768/2)
				cameraZoom = Vector2(1,1)
			_:
				logcat.stdout(\"Unknown part at index: \" + String(parts.find(part)), logcat.ERROR)

func _process(_delta):
	position = position.move_toward(cameraGoTo, camspeed)
	zoom = zoom.move_toward(cameraZoom, camzoomspeed)
"

[sub_resource type="GDScript" id=4]
script/source = "extends Control

const p1 = \"Hi there! My name's Polezno, and I'm here to help you out!\"
const p2 = \"First off, let's create a character. Click the \\\"+ Create\\\" button to do so.\"
const p3 = \"In this screen, you'll give the character some appearance!\"
const p4 = \"These two arrows select different parts of your character.\"
const p5 = \"And these arrows select the different variants of that part.\"
const p6 = \"You can also click this button to provide a custom look for your character!\"
const p7 = \"Some parts are required, while others aren't. The required ones are set by default to the NightWing base, though you can change that in the settings.\"
const p8 = \"Try it now! Give your character some looks. Click next once you are ready to continue.\"
const p9 = \"In this screen, you'll give your character some color.\"
const p10 = \"These arrows select different parts of the character, leaving out the hidden ones.\"
const p11 = \"This button opens a color picker, which you can use to set the color of the selected part.\"
const p12 = \"Go ahead and give your character some color! Click next to proceed.\"
const p13 = \"This screen defines your character's traits.\"
const p14 = \"Traits can be selected entirely by you, or you can click the randomize button to completely randomize it.\"
const p15 = \"Try it! Click next to continue on to the last screen.\"
const p16 = \"In this screen, you'll define your character's name, gender, and their pronouns.\"
const p17 = \"You can also select how big your character will appear.\"
const p18 = \"Now give your character some details! Click save once you are done.\"
const p19 = \"As you can see, now your character appears as a tab on the bottom of your screen.\"
const p20 = \"After saving, the character automatically gets selected.\"
const p21 = \"On the right side of the screen, there are several options.\"
const p22 = \"You can export your character...\"
const p23 = \"... store your character to the cloud, so it can be accessed from anywhere...\"
const p24 = \"... or delete your character. That cannot be undone, so be careful!\"
const p25 = \"Lastly, below the design of your character, a play button appears. Go ahead and click that.\"
const p26 = \"In this screen, you can select to either play solo...\"
const p27 = \"... or play with friends.\"
const p28 = \"And thats about it for the customizer! I'll see you in the world, traveller.\"

func _ready():
	$poleznocustomtut.hide()
	$customizer.hide()

func onCreate():
	$mmbtn.hide()
	$customizer.initCustomizer()

"

[sub_resource type="GDScript" id=5]
script/source = "extends Control

func _ready():
	$arrowV/u.hide()

signal cancel()

const partIDs = [\"head\",\"body\",\"spine\",\"wings\",\"legs\",\"tail\",'tdec']

onready var player = get_parent().get_parent().get_parent().get_node(\"AnimationPlayer\")
onready var camera = get_parent().get_parent().get_parent().get_node(\"Camera2D\")

var location = 0
var currentPart = 0
var currentPartID = \"head\"

# locations - 0: parts 1: colors 2: traits 3: details
# parts - 0: head 1: body 2: spine 3: wings 4: legs 5: tail 6: tail decoration

func partChange(partID):
	match partID:
		\"head\":
			player.play(\"camZoomHead\")
		\"body\":
			pass

func initCustomizer():
	player.play(\"camInit\")
	location = 0
	currentPart = 0
	currentPartID = \"head\"
	show()

func onNext():
	if location <= 3:
		location += 1
		if location == 3:
			$nsbtn.text = \"Save\"
		$pbtn.disabled = false

func onPrevious():
	if location >= 0:
		location -= 1
		if location == 0:
			$pbtn.disabled = true
		$nsbtn.text = \"Next\"

func nextPart():
	if currentPart < 6:
		currentPart += 1
		camera.camMovePart(partIDs[currentPart])
		if currentPart == 6:
			$arrowV/d.hide()
		else:
			$arrowV/d.show()
		if currentPart == 0:
			$arrowV/u.hide()
		else:
			$arrowV/u.show()

func previousPart():
	if currentPart > 0:
		currentPart -= 1
		camera.camMovePart(partIDs[currentPart])
		if currentPart == 0:
			$arrowV/u.hide()
		else:
			$arrowV/u.show()
		if currentPart == 6:
			$arrowV/d.hide()
		else:
			$arrowV/d.show()

func cancel():
	emit_signal(\"cancel\")
	hide()
"

[sub_resource type="Animation" id=6]
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("ui/ScrollContainer:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=7]
tracks/0/type = "value"
tracks/0/path = NodePath("Camera2D:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.6 ),
"transitions": PoolRealArray( 1 ),
"update": 3,
"values": [ Vector2( 611.648, 483.893 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Camera2D:zoom")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.6 ),
"transitions": PoolRealArray( 1 ),
"update": 3,
"values": [ Vector2( 0.4, 0.4 ) ]
}

[sub_resource type="Animation" id=8]
length = 0.75
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("ui/ScrollContainer:modulate")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Camera2D:position:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 683, -0.25, 0, 0.25, 0, 713, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0.2, 0.75 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("Camera2D:position:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 384, -0.25, 0, 0.25, 0, 354, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0.2, 0.75 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("Camera2D:zoom:x")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 0.4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0.2, 0.75 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath("Camera2D:zoom:y")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 0.4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0.2, 0.75 )
}

[node name="gamesys" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false,
"_edit_vertical_guides_": [  ]
}
sceneName = "gamesys"

[node name="ui" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="bg" type="TextureRect" parent="ui"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 9 )
expand = true
flip_h = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="design" type="Control" parent="ui"]
anchor_left = 0.09
anchor_top = 0.307
anchor_right = 0.673
anchor_bottom = 0.89
margin_left = 0.578636
margin_top = -0.324997
margin_right = 0.200623
margin_bottom = -0.0689697
grow_horizontal = 2
grow_vertical = 2
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="spine" type="NinePatchRect" parent="ui/design"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 4 )
region_rect = Rect2( 0, 0, 796, 448 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Also will serve for the character stuff"
}

[node name="body" type="NinePatchRect" parent="ui/design"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 2 )
region_rect = Rect2( 0, 0, 796, 448 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Also will serve for the character stuff"
}

[node name="legs" type="NinePatchRect" parent="ui/design"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 5 )
region_rect = Rect2( 3980, 0, 796, 448 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Also will serve for the character stuff"
}

[node name="tail" type="NinePatchRect" parent="ui/design"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 7 )
region_rect = Rect2( 0, 0, 796, 448 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Also will serve for the character stuff"
}

[node name="head" type="NinePatchRect" parent="ui/design"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 8 )
region_rect = Rect2( 0, 0, 796, 448 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Also will serve for the character stuff"
}

[node name="wings" type="NinePatchRect" parent="ui/design"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 6 )
region_rect = Rect2( 0, 0, 796, 448 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Also will serve for the character stuff"
}

[node name="tdec" type="NinePatchRect" parent="ui/design"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 3 )
region_rect = Rect2( 0, 0, 796, 448 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Also will serve for the character stuff"
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="ui/design"]
anims/preview = SubResource( 2 )

[node name="ScrollContainer" type="ScrollContainer" parent="ui"]
anchor_top = 0.859
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 0.287964
scroll_vertical_enabled = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="chartabs" type="HBoxContainer" parent="ui/ScrollContainer"]
margin_right = 1366.0
margin_bottom = 108.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/separation = 5

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 683, 384 )
current = true
smoothing_enabled = true
script = SubResource( 3 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="toplayer" type="Control" parent="CanvasLayer"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = SubResource( 4 )
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="mmbtn" type="Button" parent="CanvasLayer/toplayer"]
margin_left = 40.0
margin_top = 32.0
margin_right = 115.0
margin_bottom = 60.0
custom_fonts/font = ExtResource( 10 )
text = "Quit to Main Menu"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="poleznocustomtut" type="Control" parent="CanvasLayer/toplayer"]
visible = false
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2

[node name="customizer" type="Control" parent="CanvasLayer/toplayer"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="arrowH" type="Control" parent="CanvasLayer/toplayer/customizer"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="r" type="TextureButton" parent="CanvasLayer/toplayer/customizer/arrowH"]
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = -120.0
margin_top = -44.0
margin_right = -32.0
margin_bottom = 44.0
texture_normal = ExtResource( 16 )
texture_pressed = ExtResource( 16 )
texture_hover = ExtResource( 11 )
expand = true

[node name="l" type="TextureButton" parent="CanvasLayer/toplayer/customizer/arrowH"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = 16.0
margin_top = -44.0
margin_right = 104.0
margin_bottom = 44.0
texture_normal = ExtResource( 13 )
texture_pressed = ExtResource( 13 )
texture_hover = ExtResource( 12 )
expand = true

[node name="arrowV" type="Control" parent="CanvasLayer/toplayer/customizer"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="u" type="TextureButton" parent="CanvasLayer/toplayer/customizer/arrowV"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -44.0
margin_top = 16.0
margin_right = 44.0
margin_bottom = 104.0
texture_normal = ExtResource( 15 )
texture_pressed = ExtResource( 15 )
texture_hover = ExtResource( 14 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="d" type="TextureButton" parent="CanvasLayer/toplayer/customizer/arrowV"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -44.0
margin_top = -104.0
margin_right = 44.0
margin_bottom = -16.0
texture_normal = ExtResource( 18 )
texture_pressed = ExtResource( 18 )
texture_hover = ExtResource( 17 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="nsbtn" type="Button" parent="CanvasLayer/toplayer/customizer"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -82.0
margin_top = 32.0
margin_right = -30.0
margin_bottom = 60.0
custom_fonts/font = ExtResource( 10 )
text = "Next"

[node name="pbtn" type="Button" parent="CanvasLayer/toplayer/customizer"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -186.0
margin_top = 32.0
margin_right = -99.0
margin_bottom = 60.0
custom_fonts/font = ExtResource( 10 )
disabled = true
text = "Previous"

[node name="cbtn" type="Button" parent="CanvasLayer/toplayer/customizer"]
margin_left = 40.0
margin_top = 32.0
margin_right = 115.0
margin_bottom = 60.0
custom_fonts/font = ExtResource( 10 )
text = "Cancel"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/camInit = SubResource( 6 )
anims/camZoomBody = SubResource( 7 )
anims/camZoomHead = SubResource( 8 )
[connection signal="pressed" from="CanvasLayer/toplayer/mmbtn" to="ui" method="mmreturn"]
[connection signal="cancel" from="CanvasLayer/toplayer/customizer" to="ui" method="customizerCancel"]
[connection signal="pressed" from="CanvasLayer/toplayer/customizer/arrowV/u" to="CanvasLayer/toplayer/customizer" method="previousPart"]
[connection signal="pressed" from="CanvasLayer/toplayer/customizer/arrowV/d" to="CanvasLayer/toplayer/customizer" method="nextPart"]
[connection signal="pressed" from="CanvasLayer/toplayer/customizer/nsbtn" to="CanvasLayer/toplayer/customizer" method="onNext"]
[connection signal="pressed" from="CanvasLayer/toplayer/customizer/pbtn" to="CanvasLayer/toplayer/customizer" method="onPrevious"]
[connection signal="pressed" from="CanvasLayer/toplayer/customizer/cbtn" to="CanvasLayer/toplayer/customizer" method="cancel"]
